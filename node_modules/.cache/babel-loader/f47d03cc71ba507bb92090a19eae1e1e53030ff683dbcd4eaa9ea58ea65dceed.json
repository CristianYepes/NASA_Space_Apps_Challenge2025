{"ast":null,"code":"var _jsxFileName = \"/home/rober/space-apps/src/components/Planet3DGLB.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './Planet3D.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Planet3DGLB = ({\n  planetType = 'moon',\n  size = 1,\n  rotationSpeed = 1,\n  autoRotate = true,\n  shadowIntensity = 1,\n  environmentImage\n}) => {\n  _s();\n  const modelViewerRef = useRef(null);\n  const getPlanetPath = planet => {\n    switch (planet) {\n      case 'moon':\n        return '/glb_planets/Moon.glb';\n      case 'jupiter':\n        return '/glb_planets/Jupiter.glb';\n      default:\n        return '/glb_planets/Moon.glb';\n    }\n  };\n  useEffect(() => {\n    // Cargar el script de model-viewer si no está cargado\n    if (!document.querySelector('script[src*=\"model-viewer\"]')) {\n      const script = document.createElement('script');\n      script.type = 'module';\n      script.src = 'https://ajax.googleapis.com/ajax/libs/model-viewer/4.0.0/model-viewer.min.js';\n      document.head.appendChild(script);\n    }\n  }, []);\n\n  // Los atributos se configuran directamente en el HTML\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"planet-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: modelViewerRef,\n      dangerouslySetInnerHTML: {\n        __html: `\n            <model-viewer\n              src=\"${getPlanetPath(planetType)}\"\n              alt=\"${planetType} 3D model\"\n              style=\"width: 100%; height: 100%; --poster-color: transparent; display: block; margin: 0 auto; transform-origin: center center; object-fit: contain;\"\n              camera-controls\n              touch-action=\"pan-y\"\n              shadow-intensity=\"${shadowIntensity}\"\n              ${environmentImage ? `environment-image=\"${environmentImage}\"` : ''}\n              min-camera-orbit=\"auto auto 4\"\n              max-camera-orbit=\"auto auto 25\"\n              camera-orbit=\"0deg 0deg 15m\"\n              field-of-view=\"60deg\"\n              camera-target=\"0m 0m 0m\"\n              interaction-policy=\"allow-when-focused\"\n              auto-rotate-delay=\"0\"\n              ${autoRotate ? 'auto-rotate' : ''}\n              ${rotationSpeed !== 1 ? `rotation-per-second=\"${rotationSpeed}rad\"` : ''}\n              rotation-axis=\"0 1 0\"\n              rotation-origin=\"0 0 0\"\n            ></model-viewer>\n          `\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Planet3DGLB, \"S0a1oGvABmByeElejLhlZ9T0aE4=\");\n_c = Planet3DGLB;\nexport default Planet3DGLB;\nvar _c;\n$RefreshReg$(_c, \"Planet3DGLB\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Planet3DGLB","planetType","size","rotationSpeed","autoRotate","shadowIntensity","environmentImage","_s","modelViewerRef","getPlanetPath","planet","document","querySelector","script","createElement","type","src","head","appendChild","className","children","ref","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/rober/space-apps/src/components/Planet3DGLB.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './Planet3D.css';\n\ninterface Planet3DGLBProps {\n  planetType?: 'moon' | 'jupiter';\n  size?: number;\n  rotationSpeed?: number;\n  autoRotate?: boolean;\n  shadowIntensity?: number;\n  environmentImage?: string;\n  cameraOrbit?: string;\n}\n\nconst Planet3DGLB: React.FC<Planet3DGLBProps> = ({\n  planetType = 'moon',\n  size = 1,\n  rotationSpeed = 1,\n  autoRotate = true,\n  shadowIntensity = 1,\n  environmentImage\n}) => {\n  const modelViewerRef = useRef<HTMLDivElement>(null);\n\n  const getPlanetPath = (planet: string) => {\n    switch (planet) {\n      case 'moon':\n        return '/glb_planets/Moon.glb';\n      case 'jupiter':\n        return '/glb_planets/Jupiter.glb';\n      default:\n        return '/glb_planets/Moon.glb';\n    }\n  };\n\n  useEffect(() => {\n    // Cargar el script de model-viewer si no está cargado\n    if (!document.querySelector('script[src*=\"model-viewer\"]')) {\n      const script = document.createElement('script');\n      script.type = 'module';\n      script.src = 'https://ajax.googleapis.com/ajax/libs/model-viewer/4.0.0/model-viewer.min.js';\n      document.head.appendChild(script);\n    }\n  }, []);\n\n  // Los atributos se configuran directamente en el HTML\n\n  return (\n    <div className=\"planet-container\">\n      <div\n        ref={modelViewerRef}\n        dangerouslySetInnerHTML={{\n          __html: `\n            <model-viewer\n              src=\"${getPlanetPath(planetType)}\"\n              alt=\"${planetType} 3D model\"\n              style=\"width: 100%; height: 100%; --poster-color: transparent; display: block; margin: 0 auto; transform-origin: center center; object-fit: contain;\"\n              camera-controls\n              touch-action=\"pan-y\"\n              shadow-intensity=\"${shadowIntensity}\"\n              ${environmentImage ? `environment-image=\"${environmentImage}\"` : ''}\n              min-camera-orbit=\"auto auto 4\"\n              max-camera-orbit=\"auto auto 25\"\n              camera-orbit=\"0deg 0deg 15m\"\n              field-of-view=\"60deg\"\n              camera-target=\"0m 0m 0m\"\n              interaction-policy=\"allow-when-focused\"\n              auto-rotate-delay=\"0\"\n              ${autoRotate ? 'auto-rotate' : ''}\n              ${rotationSpeed !== 1 ? `rotation-per-second=\"${rotationSpeed}rad\"` : ''}\n              rotation-axis=\"0 1 0\"\n              rotation-origin=\"0 0 0\"\n            ></model-viewer>\n          `\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Planet3DGLB;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYxB,MAAMC,WAAuC,GAAGA,CAAC;EAC/CC,UAAU,GAAG,MAAM;EACnBC,IAAI,GAAG,CAAC;EACRC,aAAa,GAAG,CAAC;EACjBC,UAAU,GAAG,IAAI;EACjBC,eAAe,GAAG,CAAC;EACnBC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,cAAc,GAAGX,MAAM,CAAiB,IAAI,CAAC;EAEnD,MAAMY,aAAa,GAAIC,MAAc,IAAK;IACxC,QAAQA,MAAM;MACZ,KAAK,MAAM;QACT,OAAO,uBAAuB;MAChC,KAAK,SAAS;QACZ,OAAO,0BAA0B;MACnC;QACE,OAAO,uBAAuB;IAClC;EACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACe,QAAQ,CAACC,aAAa,CAAC,6BAA6B,CAAC,EAAE;MAC1D,MAAMC,MAAM,GAAGF,QAAQ,CAACG,aAAa,CAAC,QAAQ,CAAC;MAC/CD,MAAM,CAACE,IAAI,GAAG,QAAQ;MACtBF,MAAM,CAACG,GAAG,GAAG,8EAA8E;MAC3FL,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACL,MAAM,CAAC;IACnC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,oBACEd,OAAA;IAAKoB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/BrB,OAAA;MACEsB,GAAG,EAAEb,cAAe;MACpBc,uBAAuB,EAAE;QACvBC,MAAM,EAAE;AAClB;AACA,qBAAqBd,aAAa,CAACR,UAAU,CAAC;AAC9C,qBAAqBA,UAAU;AAC/B;AACA;AACA;AACA,kCAAkCI,eAAe;AACjD,gBAAgBC,gBAAgB,GAAG,sBAAsBA,gBAAgB,GAAG,GAAG,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgBF,UAAU,GAAG,aAAa,GAAG,EAAE;AAC/C,gBAAgBD,aAAa,KAAK,CAAC,GAAG,wBAAwBA,aAAa,MAAM,GAAG,EAAE;AACtF;AACA;AACA;AACA;MACQ;IAAE;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpB,EAAA,CAhEIP,WAAuC;AAAA4B,EAAA,GAAvC5B,WAAuC;AAkE7C,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}